"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = require("../../utils");

var ruleName = "comment-space-inside";

exports.ruleName = ruleName;
var messages = (0, _utils.ruleMessages)(ruleName, {
  expectedOpening: "Expected single space after \"/*\"",
  rejectedOpening: "Unexpected whitespace after \"/*\"",
  expectedClosing: "Expected single space before \"*/\"",
  rejectedClosing: "Unexpected whitespace before \"*/\""
});

exports.messages = messages;

exports["default"] = function (expectation) {
  return function (root, result) {
    var validOptions = (0, _utils.validateOptions)(result, ruleName, {
      actual: expectation,
      possible: ["always", "never"]
    });
    if (!validOptions) {
      return;
    }

    root.walkComments(function (comment) {

      var left = comment.raw("left");
      var right = comment.raw("right");

      if (left !== "" && expectation === "never") {
        (0, _utils.report)({
          message: messages.rejectedOpening,
          node: comment,
          index: 2,
          result: result,
          ruleName: ruleName
        });
      }
      if (left !== " " && expectation === "always") {
        (0, _utils.report)({
          message: messages.expectedOpening,
          node: comment,
          index: 2,
          result: result,
          ruleName: ruleName
        });
      }

      if (right !== "" && expectation === "never") {
        (0, _utils.report)({
          message: messages.rejectedClosing,
          node: comment,
          index: comment.toString().length - 3,
          result: result,
          ruleName: ruleName
        });
      }
      if (right !== " " && expectation === "always") {
        (0, _utils.report)({
          message: messages.expectedClosing,
          node: comment,
          index: comment.toString().length - 3,
          result: result,
          ruleName: ruleName
        });
      }
    });
  };
};